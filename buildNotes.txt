//Material UI
    is 
        ng package 
            with ng components

                such as 
                navigation 
                layout
                form controls

    
    be sure to
        unlock the component in 'app module'
        and in the appropriate people or projects module
        prior to use 


//SCSS notes 
    app.component.SCSS  
        has 
            main
    
    app.people.component.SCSS 
        has 
            nada for now
    
    app.people-list.component.SCSS
    app.people-add.component.SCSS
        has 
            host 


//Structural Directives 
    dynamically loop to create x panels or what ever 
    instructions on element
    example 
        ngModel 
            applies to a single element

        *ngfor 
            structually change the rendered html code 
            helper tool to repeat element as often as required 

//Creating people list with property and event binding 
    first
    in the template
        build up the input field 
            using
            mat input 

            add mgModel for two way binding 
        
    in the component.ts file 
        use two-way binding 
            by adding a property to the 
            class
    
    second
    in the component.ts 
        add a const
        example 
            const people ={name: this.enteredName, role: this.enteredRole};

            where 
                enteredName
                and
                enteredRole
                    are properties on the class
    
    third 
        get the data from the form to another component

            can emit events 
            and 
            send data into a component
            add it to say an array 
            then later 
            send it to a component

        for details see lesson 23


//Model creation
    file 
        people.model added 
            using interface which is like a class and defines how an object can be instanciated
            so 
                Person[]
            and 
            exported

        imported   
            Person[]
                to 
                    app.component   
                    people-list.component
                    people-add.component 
                    
//Adding NodeJS 

  //Connecting Node + Angular 
    two servers 

    Node(Express) 
        handles incoming req's 

    //Angular SPA 
    handles background req's 

        served from seprate static host 
            returns the 
                html
                JavaScript 
                CSS 

    this means 
        logically seperate apps 

    with Node(Express)
        build a RESTful API 


    //RESTful API 
        a server side app or service 

        is
        stateless backend 
            not caring who connects to it

        the model 

            server 
                access from these three 
            clientMobile

            clientCode

            clientBrowser (a SPA)

        
        does 
        exposes a few URLs or paths 

        the model 
        
            RESTful server 
            /users
            /projects
            /people 

                req terms 
                    get 
                    post 
                    delete
            
            Response 

            to the 
            Client 
                with a Reequest (AJAX)


            Using 
            JSON data 

        this sets things up to allow for servicing multiple clients
            like
            mobile 
            client code 


    starting server 
        in terminal 
           npm run start:server 


//MongoDb 
    Atlas 
        Project = LocEight
        
        new cluster = people 

        admin 
            locEightAdmin
            

    
    The Driver 
        Mongoose 
            builds up on mongodb driver 

            uses 
                schemas 
                    for data structure 



//Adding module and components 

    ng g module name
        in that module folder 

            ng g c name


starting server 
        in terminal 
           npm run start:server   
                 
Mdb Atlas
mongo "mongodb+srv://cluster0-80zc4.mongodb.net/test" --username locEightAdmin
gAp8MCPMfu7OBUs3


//documenting the connetions between 
    backend 
        models 
            has 
                people schema 
        routes 
            has 
                express.Router()
                router
                .post
                .put
                .get
                .delete

        app.js 
            has 
                app = express()
                mongoose.connect  to Atlas url
    
    client
        people 
            has 
            person.model 
                with interface Person

            people.service
                 with 
                    getPeople
                    getPerson
                    addPerson
                    updatePerson
                    deletePerson

            people-list
                has 
                    component.ts 
                        with 
                            Subscription
                            OnInit
                            OnDestroy

                            seems to manage part of observable to observer flow



            people-add



//Pick up point 
    #29 Working on Form